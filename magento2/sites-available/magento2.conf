   ## Maps config file
   include conf_m2/maps.conf;

   ## Proxy server to terminate ssl
#  server {
#   listen 443 ssl http2;
#   server_name *.example.com;
#
   ## Rewrite hardcoded http links
#  sub_filter 'http://'  'https://';
#  sub_filter_once off;  
#    
   ## SSL key and cert location
#  ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem; 
#  ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
#
   ## Proxy-pass to Varnish
#  location / {
#    proxy_pass  http://127.0.0.1:8081;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    proxy_set_header X-Forwarded-Host $host;
#    proxy_set_header Host $host;
#    proxy_set_header X-Scheme https;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header X-Forwarded-Proto https;
#    proxy_set_header X-Forwarded-Port 443;
#    proxy_set_header X-Secure on;
#    proxy_set_header Accept-Encoding "";
#    proxy_set_header Connection "";
#    proxy_http_version 1.1;
#    proxy_read_timeout 7200s;
#    proxy_send_timeout 7200s;
#  }
# }

  server {
   listen 80 reuseport;
#  listen 443 ssl http2 reuseport;
   server_name example.com;
 
   access_log  /var/log/nginx/access.log  main;
   error_log   /var/log/nginx/error.log  error;
	
   if ($bad_client) { return 403; }
	
   ## Set Magento root folder
   set $MAGE_ROOT /var/www/html;
   ## Set main public directory /pub
   root $MAGE_ROOT/pub;
	
   ## SSL CONFIGURATION
#  ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem; 
#  ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
	
   ## phpMyAdmin configuration
   include conf_m2/phpmyadmin.conf;
	
   ## Nginx and php-fpm status
   include conf_m2/status.conf;
    
   ## Server maintenance block.
#  include conf_m2/maintenance.conf;
	
   ## Magento Setup Tool
   include conf_m2/setup.conf;
	
   ## Deny all internal locations also default phpmyadmin
   location ~ ^/(app|generated|lib|bin|var|tmp|phpserver|vendor|magento_version|php[mM]y[aA]dmin|pma)/? { 
     deny all; 
   }
	   
   location / {
     try_files $uri $uri/ /index.php$is_args$args;
   }
	
   ## Error log/page
#  include conf_m2/error_page.conf;
	
   ## Static location
   include conf_m2/assets.conf;
  
   ## Protect extra directories
   include conf_m2/extra_protect.conf;
	   
   ## Process php files (strict rule, define files to be executed)
   location ~ (index|health_check|get|static|report|404|503)\.php$ {
     try_files $uri =404;
#    fastcgi_intercept_errors on;
     include conf_m2/php_backend.conf;
     
     ## Enable Magento profiler
#    fastcgi_param   MAGE_PROFILER html;

     ## Store code with multi domain
#    fastcgi_param   MAGE_RUN_CODE $MAGE_RUN_CODE;
#    fastcgi_param   MAGE_RUN_TYPE $MAGE_RUN_TYPE;

     ## Enable POST logging in admin
#    if ($request_method = POST) {set $adminpost A;}
#    if ($request_uri ~* "/ADMIN_PLACEHOLDER/") {set $adminpost "${adminpost}B";}
#    if ($adminpost = AB) { access_log /var/log/nginx/admin_post.log adminpost;}
   }
	
   ## Block other undefined php files, possible injections and random malware hooks.
   location ~* \.php$ { 
     return 404; 
   }
  }
